#summary upgrade workspace for 3.0-rc.2

This workspace script is more up-to-date than the [UpgradeSs3ToRc2  upgrade script].

Prefetch:
 * [UpgradePrefetchWorkspaceSs3ToRc2 fetch all packages into a local directory] that is used by the prefetch phase to load packages into memory

Segments of the script:
 * fetch phase
  * fetch all configurations directly referenced in script
  * upgrade Metacello
  * fetch GLASS packages
  * fetch Seaside30 packages
  * fetch tODE packages
  * fetch SqueakSource3 packages
  * *COMMIT*
 * load phase (Issue 56)
  * load GLASS
  * load Seaside30 (Issue 47)
  * load tODE
  * load SqueakSource3 (Issue 55)
  * *COMMIT*
  * _*IMPORTANT*_: after this commit, the system is expected to function just fine _without_ running the migration step...
 * conversion phase
  * convert propery lists that refer to collections of SSEmailAddress instances into collections of WAEmailAddress instances (Issue 39 and Issue 41)
 * migration analysis
 * migration phase (Issue 46)
  * migrate instances (Issue 37)
  * *COMMIT*
 * clean up phase
  * clean up
   * remove continuations from object log ... or wipe out continuation
   * looks like the instances for all subclasses of SSModel may have a #stringsSatisfyBlocks entry in the property dictionary that is no longer valid (Issue 48)
   * [http://code.google.com/p/glassdb/wiki/ClearPersistentCaches clear persistent caches]
   * nuke [http://ss3.gemstone.com/ss/ss3.html ss3], [http://ss3.gemstone.com/ss/pharo.html pharo], [http://ss3.gemstone.com/ss/grease.html Grease], [http://ss3.gemstone.com/ss/distroPharo1.html Distro for Pharo 1], [http://ss3.gemstone.com/ss/stash.html stash], [http://ss3.gemstone.com/ss/stash2.html stash2] projects as they were added for alpha testing
  * *COMMIT*
===workspace===
{{{
| versionString deployBlock classesWithClassHistory changedClassNames migrationClassNames 
 migrationClasses instanceList symbolList instanceCount array migrationDoBlock ssModelSubclasses cacheRepository cacheDirectory |
"fetch phase"
versionString := '1.0-beta.8.7.1'.
cacheDirectory := '/export/foos1/users/dhenrich/2.0/squeaksource3/monticello'.
cacheRepository := (MCDirectoryRepository new) 
	directory: (ServerFileDirectory on: cacheDirectory);
	yourself.
GsDeployer cleanClassHistory.
System commitTransaction ifFalse: [ nil error: 'commit failed'].
true ifTrue: [ | gofer |
	(MCWorkingCopy allManagers detect: [:each | each packageName = 'ConfigurationOftODE'])
        repositoryGroup addRepository: (MCHttpRepository 
                location: 'http://ss3.gemstone.com/ss/tODE'
                user: ''
                password: '').
	gofer := (Gofer new)
		repository: cacheRepository;
		yourself.
	#('ConfigurationOfGLASS' 'ConfigurationOfMetacello' 'ConfigurationOftODE' 'ConfigurationOfSeaside30' 'ConfigurationOfSqueakSource' ) do: [:configName | gofer package: configName ].
	gofer load.
	ConfigurationOfMetacello project currentVersion versionNumber < '1.0-beta.31.2' asMetacelloVersionNumber ifTrue: [
        (Gofer new)
            gemsource: 'metacello';
            version: 'Gofer-Core.gemstone-dkh.135';
            version: 'Metacello-Base-DaleHenrichs.19';
            version: 'Metacello-Core-dkh.468';
            version: 'Metacello-MC-dkh.537';
            version: 'Metacello-Platform.gemstone-dkh.23';
            load]].
System commitTransaction ifFalse: [ nil error: 'commit failed'].
"load phase"
deployBlock := [:aBlock |       | oldAutoCommit oldAutoMigrate |
        oldAutoCommit := MCPlatformSupport autoCommit.
        oldAutoMigrate := MCPlatformSupport autoMigrate.
        MCPlatformSupport autoCommit: false.
        MCPlatformSupport autoMigrate: false.
        [aBlock 
                on: (Smalltalk at: #MetacelloSkipDirtyPackageLoad), Warning
                do: [:ex | 
                        (ex isKindOf: Warning)
                                ifTrue: [ 
                                        Transcript cr; show: ex description.
                                        ex resume ]
                                ifFalse: [ ex resume: false ]]]
                ensure: [
                        MCPlatformSupport autoCommit: oldAutoCommit.
                        MCPlatformSupport autoMigrate: oldAutoMigrate].
        System commitTransaction ifFalse: [ nil error: 'commit failed' ]].
deployBlock 
        value: [ | version |
                version := ConfigurationOfGLASS project version: versionString.
                version repositoryOverrides:  { cacheRepository }.
                version load: #( 'Core' 'Monticello' ).
                version load ].
deployBlock 
        value: [ | version |
                version := ConfigurationOfSeaside30 project version: '3.0.6.3'.
                version repositoryOverrides:  { cacheRepository }.
                version load: #('Base' 'JQuery-UI' 'Seaside-Adaptors-Swazoo' ).
         "http://code.google.com/p/squeaksource3/issues/detail?id=47"
         ((WADispatcher default handlerAt: 'ss') filters select: [:filter | filter isKindOf: SSUrlFilter]) do: [:filter | 
			filter instVarNamed: #routes put: nil ].
 ].
deployBlock 
        value: [ | version |
                version := ConfigurationOftODE project version: '0.1'.
                version repositoryOverrides:  { cacheRepository }.
                version load ].
"http://code.google.com/p/glassdb/issues/detail?id=325"
Object compile:  'finalize'. 
deployBlock 
        value: [ | version |
                "http://code.google.com/p/squeaksource3/wiki/ChangedClassesSs3ToRc2#SSCondition_migration"
                MADescriptionBuilder unload.
                "http://code.google.com/p/squeaksource3/issues/detail?id=55"
                SSRepository removeSelector: #rootUrl.
                version := ConfigurationOfSqueakSource project version: '3.0-rc.1'.
                version repositoryOverrides:  { cacheRepository }.
                version load: 'All'  ].
"conversion phase"
"http://code.google.com/p/squeaksource3/issues/detail?id=41"
"http://code.google.com/p/squeaksource3/wiki/ChangedMagritteDescriptionsSs3ToRc2#Transform_SSEmailAddress_to_WAEmailAddress"
SSRepository current projects do: [:project | 
	#(otherEmailAddresses defaultEmailRecipients) do: [:property |
		(project propertyIncludes: property)
			ifTrue: [ 
				project 
					propertyAt: property
					put: ((project propertyAt: property) 
						collect: [:ssEmailAddress | 
							WAEmailAddress address: ssEmailAddress address]) ]]].
System commitTransaction ifFalse: [ nil error: 'commit failed' ].
"migration analysis"
classesWithClassHistory := GsDeployer new classesWithClassHistory.
classesWithClassHistory size = 55 ifFalse: [ nil error: 'incorrect number of class with class history' ].
changedClassNames := (classesWithClassHistory collect: [:cl | cl name ]) asSet.
changedClassNames size = 37 ifFalse: [ nil error: 'incorrect number of changed classes' ].
"migration  phase"
symbolList := System myUserProfile symbolList.
ssModelSubclasses := SSModel withAllSubclasses .
[
        "http://code.google.com/p/squeaksource3/issues/detail?id=37"
        System commitTransaction ifFalse: [ nil error: 'commit failed' ].
        (symbolList objectNamed: #UserGlobals) 
                at: #'SS3_MIGRATE_INSTANCE_LISTS' 
                put: (instanceList := SystemRepository listInstances: classesWithClassHistory, ssModelSubclasses).
        System commitTransaction ifFalse: [ nil error: 'commit failed' ].
        "instances analysis"
        instanceList size = (classesWithClassHistory size + ssModelSubclasses size)
                ifFalse: [ nil error: 'incorrect number of classes with instances' ].
        1 to: classesWithClassHistory size do: [:index | | classVersion class history |
                (instanceList at: index) size > 0
                        ifTrue: [ 
                                classVersion := classesWithClassHistory at: index.
                                class := symbolList objectNamed: classVersion name. 
                                history := class classHistory.
                                (classVersion == history first or: [ classVersion == history last]) 
                                        ifFalse: [ nil error: 'instances of intermediate class versions' ]]].
       "#instVarMappingTo: for description migrations"
        SSMember class compile:  'instVarMappingTo: anotherClass 
        "The receiver is the class being migrated to and <anotherClass> is the class being migrated from"
        "For the upgrade of SS3 to SqueakSource3.0-rc.2, the class histories were cleared at the beginning, so 
         we can safely assume that `self classHistory first` is the version of the class present before the upgrade
         started. We assume that there are no instances of classes _between_ the first and last class bersion, because
         there were no commits when the intermediate class versions."

        anotherClass ~~ self classHistory first ifTrue: [  ^super instVarMappingTo: anotherClass ].
        "slot 5 is currently description and has been renamed to information"
        (((self allInstVarNames at: 8) = #''information'') and: [
                (anotherClass allInstVarNames at: 8) = #''description''])
                        ifFalse: [ self error: ''incorrect migration instance variable mapping''].
        ^#( 1 2 3 4 5 6 7 8 9)'.
        SSProject class compile:  'instVarMappingTo: anotherClass 
        "The receiver is the class being migrated to and <anotherClass> is the class being migrated from"
        "For the upgrade of SS3 to SqueakSource3.0-rc.2, the class histories were cleared at the beginning, so 
         we can safely assume that `self classHistory first` is the version of the class present before the upgrade
         started. We assume that there are no instances of classes _between_ the first and last class bersion, because
         there were no commits when the intermediate class versions."
        
        anotherClass ~~ self classHistory first ifTrue: [  ^super instVarMappingTo: anotherClass ].
        "slot 5 is currently description and has been renamed to information"
        (((self allInstVarNames at: 5) = #''information'') and: [
                (anotherClass allInstVarNames at: 5) = #''description''])
                        ifFalse: [ self error: ''incorrect migration instance variable mapping''].
        ^#( 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)'.
        "migration"
        instanceCount := 0.
        array := Array new: 1.
        1 to: classesWithClassHistory size do: [ :index | | instances | 
                instances := instanceList at: index.
                Transcript cr; show: (classesWithClassHistory at: index) name asString, '...'.
                instances
                        do: [ :instance | 
                                array at: 1 put: instance.
                                instance class migrateInstances: array to: instance class classHistory last ].
                instanceCount := instanceCount + instances size.
                Transcript show: instances size printString, ' instances migrated.' ].
        Transcript cr; show: instanceCount printString, ' instances migrated.'.
       System commitTransaction ifFalse: [ nil error: 'commit failed' ].
        ]
                        ensure: [ 
                                (symbolList objectNamed: #UserGlobals) 
                                        removeKey: #'SS3_MIGRATE_INSTANCE_LISTS' 
                                        ifAbsent: [  ] ].
"clean up phase"
"http://code.google.com/p/squeaksource3/issues/detail?id=48"
classesWithClassHistory size + 1 to: instanceList size do: [:index |
	(instanceList at: index) do: [:instance |
		instance properties removeKey: #stringsSatisfyBlocks ifAbsent: [] ]].
SSMember class removeSelector: #instVarMappingTo:.
SSProject class removeSelector: #instVarMappingTo:.
System commitTransaction ifFalse: [ nil error: 'commit failed' ].
}}}